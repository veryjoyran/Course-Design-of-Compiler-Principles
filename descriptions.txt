非终结符（用于语法规则）
Prog_：Program Start - 程序的开始符号，表示整个程序的起点。
Prog：Program - 程序的主要部分，包括类型、标识符、参数列表和主体语句。
DivProg：Divided Program - 分程序，可能用来表示模块化的子程序或函数。
VarDecl：Variable Declaration - 变量声明，表示变量的声明部分。
IdenTab：Identifier Table - 标识符表，表示一系列标识符（变量名）。
ComSta：Compound Statement - 复合语句，表示由多个语句组成的代码块。
StaTab：Statement Table - 语句表，表示多个语句的组合。
AssiSta：Assignment Statement - 赋值语句，表示变量赋值的语句。
AssiSta_：Assignment Statement Auxiliary - 赋值语句的辅助部分，可能用于递归定义。
IdenTab_：Identifier Table Auxiliary - 标识符表的辅助部分，可能用于处理标识符列表。
StaTab_：Statement Table Auxiliary - 语句表的辅助部分，用于处理语句列表。
Exp：Expression - 表达式，用于计算或操作的表达式。
Exp_：Expression Auxiliary - 表达式的辅助部分，用于处理递归定义的表达式。
Item：Item - 项，表示表达式中的一项，通常是因子的组合。
Item_：Item Auxiliary - 项的辅助部分，用于处理递归定义的项。
Fac：Factor - 因子，表达式的基本单位，如变量、常量或子表达式。
Type：Type - 类型，表示变量或函数的类型。
IfSta：If Statement - 条件语句，表示if语句。
ElseSta：Else Statement - else语句，表示条件语句中的else部分。
IfSta_：If Statement Auxiliary - 条件语句的辅助部分，用于处理if语句后的代码块。
LabSta：Label Statement - 标签语句，表示带有标签的语句。
LabSta_：Label Statement Auxiliary - 标签语句的辅助部分，用于处理标签的定义。
LabSta'：Label Definition - 标签的具体定义。
WSta：While Statement - 循环语句，表示while循环。
Swh：Switch Statement - switch语句，表示switch控制结构。
Sdo：Do Statement - do语句，表示do-while循环结构。
L：Logical Expression - 逻辑表达式，表示逻辑运算。
L_：Logical Expression Auxiliary - 逻辑表达式的辅助部分，用于处理递归定义的逻辑运算。
终结符（具体的符号和关键字）
Iden：标识符，表示变量名、函数名等。
{：左大括号，表示复合语句的开始。
}：右大括号，表示复合语句的结束。
,：逗号，表示标识符之间的分隔。
:：冒号，用于标签语句或条件语句中的分隔。
;：分号，表示语句的结束。
=：等号，表示赋值操作。
+：加号，表示加法运算。
-：减号，表示减法运算。
*：乘号，表示乘法运算。
/：除号，表示除法运算。
Num：数字，表示常量数字。
(：左括号，表示表达式或参数列表的开始。
)：右括号，表示表达式或参数列表的结束。
int：整数类型，表示整型变量。
double：双精度浮点数类型，表示双精度浮点型变量。
char：字符类型，表示字符型变量。
bool：布尔类型，表示布尔型变量。
if：if关键字，表示条件语句。
else：else关键字，表示条件语句中的else部分。
goto：goto关键字，表示跳转语句。
while：while关键字，表示循环语句。
>：大于号，表示大于比较运算。
<：小于号，表示小于比较运算。
>=：大于等于号，表示大于等于比较运算。
<=：小于等于号，表示小于等于比较运算。
==：等于号，表示等于比较运算。
!=：不等于号，表示不等于比较运算。
#：井号，表示程序结束的标记。